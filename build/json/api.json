{
  "classes": {
    "iot.agile.Protocol": {
      "description": "A Protocol object abstract operations over a specific protocol implementation.\nEvery Device has one Protocol used to establish and use a communication exchange.\n",
      "group": "Device",
      "methods": {
        "Initialize": {
          "description": "Abstract a setup or initialization phase for a Protocol\n",
          "args": {
            "profile": {
              "type": "ProtocolProfile"
            }
          },
          "return": {
            "type": "void"
          }
        },
        "Destroy": {
          "description": "Abstract tear down for a Protocol, may be disconnection or deinitialization\n",
          "return": {
            "type": "void"
          }
        },
        "Discover": {
          "description": "Initiate a discovery operation\n",
          "return": {
            "type": "void",
            "reference": "Devices"
          }
        },
        "Write": {
          "description": "Send data over the protocol\n",
          "args": {
            "destination": {
              "type": "String"
            },
            "arguments": {
              "type": "Object*"
            }
          },
          "return": {
            "type": "Object*"
          }
        },
        "Read": {
          "description": "Read data over the Protocol, may be cached in the Data property\ndepending on implementation to save resources\n",
          "args": {
            "name": {
              "description": "Human readable data source name as defined in the ProtocolProfile object",
              "type": "String"
            },
            "arguments": {
              "type": "Object*"
            }
          },
          "return": {
            "type": "RecordObject"
          }
        },
        "Subscribe": {
          "description": "Subscribe to data updates over the Protocol\n",
          "args": {
            "name": {
              "description": "Human readable data source name as defined in the ProtocolProfile object",
              "type": "String"
            },
            "arguments": {
              "type": "Object*"
            }
          },
          "return": {
            "type": "RecordObject",
            "reference": "Data"
          }
        }
      },
      "properties": {
        "Status": {
          "access": {
            "0": "r",
            "1": "s"
          },
          "type": "ProtocolStatus"
        },
        "Driver": {
          "description": "Driver unique code name",
          "access": {
            "0": "r"
          },
          "example": "ble",
          "type": "String"
        },
        "Name": {
          "description": "Driver name",
          "access": {
            "0": "r"
          },
          "type": "String"
        },
        "DataStore": {
          "description": "Store the last record(s) received by a Read or Subscribe operation.\nIs up to the Protocol implementation decide how\n",
          "type": "RecordObject"
        },
        "Devices": {
          "type": "ProtocolDevice"
        }
      }
    },
    "iot.agile.ProtocolManager": {
      "methods": {
        "Discover": {
          "description": "Start discovery on all the managed Protocols",
          "return": {
            "type": "void"
          }
        },
        "Add": {
          "description": "Add a new Protocol",
          "args": {
            "protocol": {
              "type": "String",
              "reference": "iot.agile.Protocol"
            }
          },
          "return": {
            "type": "void"
          }
        },
        "Remove": {
          "description": "Remove a managed Protocol",
          "args": {
            "protocol": {
              "type": "String",
              "reference": "iot.agile.Protocol"
            }
          },
          "return": {
            "type": "void"
          }
        }
      },
      "properties": {
        "Devices": {
          "description": "Contains the list of devices returned by each Protocol specific discovery, where available",
          "access": {
            "0": "r",
            "1": "s"
          },
          "type": "Array",
          "fields": "ProtocolDevice"
        },
        "Protocols": {
          "description": "The list of managed Protocols",
          "access": {
            "0": "r",
            "1": "s"
          },
          "type": "Array",
          "fields": "ProtocolOverview"
        }
      }
    }
  },
  "types": {
    "ProtocolDevice": {
      "description": "List all devices a Protocol knows about.\nThe list is updated by the Discover method.\nDevices may be provisioned programmatically during the initialization phase.\n",
      "access": {
        "0": "r",
        "1": "s"
      },
      "type": "Array",
      "fields": {
        "__field": {
          "type": "Object",
          "fields": {
            "name": {
              "type": "String"
            },
            "id": {
              "type": "String"
            },
            "status": {
              "type": "Enum",
              "fields": {
                "0": {
                  "type": "CONNECTED"
                },
                "1": {
                  "type": "DISCONNECTED"
                }
              }
            }
          }
        }
      }
    },
    "ProtocolStatus": {
      "description": "Identify a status of the Protocol, indicating if operational (AVAILABLE) or\nif for some reason further user-side checks are required.\n",
      "type": "Enum",
      "fields": {
        "0": {
          "type": "AVAILABLE"
        },
        "1": {
          "type": "NOT_CONFIGURED"
        },
        "2": {
          "type": "UNAVAILABLE"
        },
        "3": {
          "type": "DISABLED"
        },
        "4": {
          "type": "FATAL"
        }
      }
    },
    "ProtocolProfile": {
      "description": "A Protocol set of settings that translate human readable properties\nto actual Protocol implementation details.\n\nFor example, the user request the temperature value over a BLE connected\ndevice and the Protocol receive all the specific informations (like\nservices and characteristics ids) to enable the data reading.\n",
      "type": "Object*"
    },
    "ProtocolOverview": {
      "type": "Object",
      "fields": {
        "name": {
          "type": "String"
        },
        "id": {
          "type": "String"
        },
        "status": {
          "type": "ProtocolStatus"
        }
      }
    }
  }
}