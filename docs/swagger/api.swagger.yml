swagger: '2.0'
info:
  title: Agile HTTP API
  description: The Agile HTTP API to interact with local DBus objects
  version: 1.0.0
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# the domain of the service
host: localhost:8080
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /api
consumes:
  - application/json
produces:
  - application/json
# security:
#   - type: basic
#     in: header
#   - type: oauth2
#     authorizationUrl: /api/oauth
#     flow: [implicit, password, application, accessCode]
externalDocs:
  url: http://agile-iot.github.io/agile-api-spec
  description: DBus AGILE API spec
paths:
  '/device/{deviceId}/execute/{command}':
    parameters:
      -
        name: deviceId
        in: path
        description: 'Agile device Id'
        required: true
        type: string
      -
        name: command
        in: path
        description: 'Operation name to be performed'
        required: true
        type: string
    post:
      description: 'Perform an action on the device'
      parameters:
        -
          name: payload
          in: body
          description: "The content to be sent to the device to perform an actuation\n"
          schema:
            type: string
      responses:
        '200':
          description: 'Action sent'
        '204':
          description: 'Action sent, no response received'
  '/device/{deviceId}/subscribe':
    parameters:
      -
        name: deviceId
        in: path
        description: 'Agile device Id'
        required: true
        type: string
    post:
      description: "Enable a subscription to a data stream. Asynchronous data updates will\nbe delivered via websocket.\n"
      responses:
        '200':
          description: 'Subscription registered'
    delete:
      description: 'Unsubscribe from a data stream'
      responses:
        '200':
          description: Unsubscribed
  '/device/{deviceId}/{componentId}':
    parameters:
      -
        name: deviceId
        in: path
        description: 'Agile device Id'
        required: true
        type: string
      -
        name: componentId
        in: path
        description: 'Agile component name, like a sensor'
        required: true
        type: string
    get:
      description: 'Read from a device component'
      responses:
        '200':
          description: 'Read done'
        '204':
          description: 'No data available'
    post:
      description: 'Write to a device component'
      responses:
        '200':
          description: 'Write sent'
        '204':
          description: 'Write sent, no results returned'
  '/device/{deviceId}/lastUpdate':
    parameters:
      -
        name: deviceId
        in: path
        description: 'Agile device Id'
        required: true
        type: string
    get:
      description: 'Get the last record fetched from the device'
      responses:
        '200':
          description: 'Record fetched'
        '204':
          description: 'No data available'
        '404':
          description: 'Device not available'
  /devices:
    get:
      description: 'List all registered devices'
      responses:
        '200':
          description: 'List the registered device'
        '204':
          description: 'Device list is empty'
    post:
      parameters:
        -
          name: body
          in: body
          description: 'The request body describing a device'
          required: true
          schema:
            $ref: '#/definitions/DeviceDefinition'
      description: 'Creates a new device definition'
      responses:
        '200':
          description: 'Device created'
  '/devices/{deviceId}':
    parameters:
      -
        name: deviceId
        in: path
        description: 'Agile device Id'
        required: true
        type: string
    get:
      parameters:
        -
          name: body
          in: body
          description: 'The request body describing a device'
          required: true
          schema:
            $ref: '#/definitions/DeviceDefinition'
      description: 'Get a device definition'
      responses:
        '200':
          description: 'Device loaded'
        '404':
          description: 'Device not found'
    put:
      parameters:
        -
          name: body
          in: body
          description: 'The request body describing a device'
          required: true
          schema:
            $ref: '#/definitions/DeviceDefinition'
      description: 'Update a device definition'
      responses:
        '200':
          description: 'Device updated'
        '404':
          description: 'Device not found'
    delete:
      parameters:
        -
          name: body
          in: body
          description: 'The request body describing a device'
          required: true
          schema:
            $ref: '#/definitions/DeviceDefinition'
      description: 'Delete a device definition and unregister it'
      responses:
        '200':
          description: 'Device removed'
        '404':
          description: 'Device not found'
  '/protocol/{protocolId}/connection/{deviceId}':
    parameters:
      -
        name: protocolId
        in: path
        description: 'Agile Id of the protocol'
        required: true
        type: string
      -
        name: deviceId
        in: path
        description: 'Agile internal Id of the protocol'
        required: true
        type: string
    post:
      operationId: Connect
      description: 'Connect to the device'
      responses:
        '200':
          description: 'Connection initialized'
        '404':
          description: 'Device not found'
    delete:
      operationId: Disconnect
      description: 'Disconnect from the device'
      responses:
        '200':
          description: 'Disconnection completed'
        '404':
          description: 'Device not found'
  '/protocol/{protocolId}/discovery':
    parameters:
      -
        name: protocolId
        in: path
        description: 'Agile Id of the protocol'
        required: true
        type: string
    post:
      operationId: StartDiscovery
      description: 'Start the discovery process'
      responses:
        '200':
          description: 'Discovery started'
        '404':
          description: 'Device not found'
    delete:
      description: 'Stop the discovery process'
      responses:
        '200':
          description: 'Discovery process stopped'
        '404':
          description: 'Device not found'
  '/protocol/{protocolId}/{deviceId}':
    parameters:
      -
        name: protocolId
        in: path
        description: 'Agile internal Id of the protocol'
        required: true
        type: string
      -
        name: deviceId
        in: path
        description: 'Agile protocol Id of the device'
        required: true
        type: string
    post:
      description: 'Call a write via protocol'
      parameters:
        -
          name: data
          in: body
          description: 'An object containing the content to write'
          required: true
          schema:
            $ref: '#/definitions/ProtocolMessage'
      responses:
        '200':
          description: 'Write suceeded'
        '404':
          description: 'Device or component not found'
    get:
      description: 'Call a read via protocol'
      responses:
        '200':
          description: 'Read suceeded'
          schema:
            $ref: '#/definitions/RecordObject'
        '404':
          description: 'Device or component not found'
  /protocols:
    get:
      description: 'Get the list of registered protocols'
      responses:
        '200':
          description: 'Protocols list provided'
          schema:
            $ref: '#/definitions/DeviceOverview'
          examples:
            application/json:
              -
                id: BLE
                name: 'Bluetooth LE'
                interface: iot.agile.protocol.BLE
                status: AVAILABLE
              -
                id: ZigBee
                name: 'ZigBee communication protocol'
                interface: iot.agile.protocol.ZigBee
                status: AVAILABLE
        '204':
          description: 'No protocols registered.'
    post:
      description: 'Register a new protocol based on an active DBus interface'
      parameters:
        -
          name: protocol
          in: body
          schema:
            $ref: '#/definitions/ProtocolOverview'
      responses:
        '200':
          description: 'Protocol has been added'
          schema:
            $ref: '#/definitions/ProtocolOverview'
        '400':
          description: 'An error occured processing the request'
  '/protocols/{protocolId}':
    parameters:
      -
        name: protocolId
        in: path
        description: 'Agile protocol Id'
        required: true
        type: string
    post:
      description: 'Register a new Dbus object implementing the protocol API'
      responses:
        '202':
          description: 'Protocol has been added'
        '400':
          description: 'An error occured processing the request'
        '404':
          description: 'Protocol not found'
    delete:
      description: 'Register a new Dbus object implementing the protocol API'
      responses:
        '200':
          description: 'Protocol unregistered'
        '404':
          description: 'Protocol not found'
  /protocols/devices:
    get:
      description: 'List all discovered devices on all available protocols'
      responses:
        '200':
          description: "The list of multiprotocol devices\n"
          schema:
            $ref: '#/definitions/DeviceOverview'
  /protocols/discovery:
    post:
      description: 'Start a device discovery on all available protocols'
      responses:
        '204':
          description: "The discovery has been successfully started on all the regitered\nprotocols; asynchronous updates will be sent via websocket\n"
        '409':
          description: "Indicates that discovery has been requested to the underlying\nprotocols but one or more reported a failure\n"
    delete:
      description: 'Stop a device discovery if previously initiated'
      responses:
        '204':
          description: "The discovery has been successfully stopped on all the regitered\nprotocols; There will be no further device updates via websocket\n"
        '409':
          description: "Indicates that discovery has been requested to stop on the underlying\nprotocols but one or more reported a failure\n"
  
definitions:
  DeviceOverview:
    description: 'An overview of a device a protocol knows about'
    type: object
    properties:
      name:
        description: 'Friendly name of the device'
        type: object
      id:
        description: 'Protocol level id used to identify and access the device'
        type: object
      status:
        enum:
          - CONNECTED
          - DISCONNECTED
          - AVAILABLE
          - UNAVAILABLE
  ProtocolMessage:
    type: object
    properties:
      data:
        type: object
      format:
        type: object
  ProtocolOverview:
    type: object
    properties:
      name:
        description: 'The protocol name'
        type: object
      id:
        description: 'the internal code identifying the protocol'
        type: object
      interface:
        description: 'The DBus interface reference'
        type: object
      status:
        type: object
  DeviceStreamChannel:
    description: 'A channel contains a single measurement value of a sensor'
    type: object
    properties:
      name:
        type: object
      type:
        type: object
  DeviceStream:
    description: 'A stream contains a set of measurement values for a sensor'
    type: object
    properties:
      name:
        type: object
      channels:
        type: array
        items:
          $ref: '#/definitions/DeviceStreamChannel'
  DeviceDefinition:
    description: 'A device definition that contains informations describing the current device'
    type: object
    properties:
      id:
        type: object
      name:
        type: object
      description:
        type: object
      path:
        description: 'DBus specific path to reach the object instance'
        type: object
      properties:
        type: object
      streams:
        type: array
        items:
          $ref: '#/definitions/DeviceStream'
  RecordObject:
    type: object
    properties:
      DeviceId:
        description: 'The Agile Id for the device'
        type: object
      ComponentId:
        description: 'The component Id for the device, like the sensor name'
        type: object
      Value:
        description: 'The value stored'
        type: object
      Format:
        description: 'A format description to read the data value'
        type: object
      LastUpdate:
        description: 'A UNIX timestamp rapresenting the last update of a record'
        type: object
  
