swagger: '2.0'
info:
  title: Agile HTTP API
  description: The Agile HTTP API to interact with local DBus objects
  version: 1.0.0
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# the domain of the service
host: gw.agile.local
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api
consumes:
  - application/json
produces:
  - application/json
# security:
#   - type: basic
#     in: header
#   - type: oauth2
#     authorizationUrl: /api/oauth
#     flow: [implicit, password, application, accessCode]
externalDocs:
  url: http://agile-iot.github.io/agile-api-spec/build/html/api.html
  description: DBus AGILE API spec
paths:
  '/{deviceId}/{componentId}/execute/{operation}':
    parameters:
      -
        name: deviceId
        in: path
        description: 'Agile device Id'
        required: true
        type: string
      -
        name: componentId
        in: path
        description: 'Agile component Id'
        required: true
        type: string
    post:
      parameters:
        -
          name: operation
          in: path
          description: 'Operation name to be performed'
          required: true
          type: string
      description: 'Perform an action on the device'
      responses:
        '200':
          description: 'Action sent'
  '/{deviceId}/{componentId}/subscribe':
    parameters:
      -
        name: deviceId
        in: path
        description: 'Agile device Id'
        required: true
        type: string
      -
        name: componentId
        in: path
        description: 'Agile component Id'
        required: true
        type: string
    post:
      description: "Enable a subscription to a data stream. Asynchronous data updates will\nbe delivered via websocket.\n"
      responses:
        '200':
          description: 'Subscription registered'
    delete:
      description: 'Disable a subscription to a data stream'
      responses:
        '200':
          description: 'Subscription unregistered'
  '/{deviceId}/{componentId}':
    parameters:
      -
        name: deviceId
        in: path
        description: 'Agile device Id'
        required: true
        type: string
      -
        name: componentId
        in: path
        description: 'Agile component Id'
        required: true
        type: string
    get:
      description: 'Get the list of data stored for a stream'
      responses:
        '200':
          description: 'Data loaded'
        '204':
          description: 'No data available'
    delete:
      description: 'Delete all data related to a stream'
      responses:
        '200':
          description: 'Data has been deleted'
    post:
      description: 'Search for a stream recordset'
      responses:
        '200':
          description: 'Query executed succesfully'
        '204':
          description: 'Query executed succesfully but gave no results'
  '/{deviceId}/{componentId}/lastUpdate':
    parameters:
      -
        name: deviceId
        in: path
        description: 'Agile device Id'
        required: true
        type: string
      -
        name: componentId
        in: path
        description: 'Agile component Id'
        required: true
        type: string
    get:
      description: 'Get the last stored record for a stream'
      responses:
        '200':
          description: 'Record fetched'
        '204':
          description: 'No data available'
        '404':
          description: 'Device or stream not available'
  '/devices/{deviceId}':
    parameters:
      -
        name: deviceId
        in: path
        description: 'Agile device Id'
        required: true
        type: string
    get:
      parameters:
        -
          name: body
          in: body
          description: 'The request body describing a device'
          required: true
          $ref: DeviceDefinition
      description: 'Get a device definition'
      responses:
        '200':
          description: 'Device loaded'
        '404':
          description: 'Device not found'
    put:
      parameters:
        -
          name: body
          in: body
          description: 'The request body describing a device'
          required: true
          $ref: DeviceDefinition
      description: 'Update a device definition'
      responses:
        '200':
          description: 'Device updated'
        '404':
          description: 'Device not found'
    delete:
      parameters:
        -
          name: body
          in: body
          description: 'The request body describing a device'
          required: true
          $ref: DeviceDefinition
      description: 'Delete a device definition and unregister it'
      responses:
        '200':
          description: 'Device removed'
        '404':
          description: 'Device not found'
  /devices:
    get:
      parameters:
        -
          name: body
          in: body
          description: 'The request body describing a device'
          required: true
          $ref: DeviceDefinition
      description: 'List all registered devices'
      responses:
        '200':
          description: 'Device list loaded'
        '204':
          description: 'Device list is empty'
    post:
      parameters:
        -
          name: body
          in: body
          description: 'The request body describing a device'
          required: true
          $ref: DeviceDefinition
      description: 'Creates a new device definition'
      responses:
        '200':
          description: 'Device created'
  /protocols:
    get:
      description: 'Get the list of registered protocols'
      parameters:
        -
          name: protocols
          description: 'Returns a list of registered protocols'
          in: body
          schema:
            type: Array
            $ref: '#/definitions/ProtocolOverview'
      responses:
        '200':
          description: 'Protocols list provided'
          example:
            -
              id: BLE
              name: 'Bluetooth LE'
              interface: iot.agile.protocol.BLE
              status: AVAILABLE
            -
              id: ZigBee
              name: 'ZigBee communication protocol'
              interface: iot.agile.protocol.ZigBee
              status: AVAILABLE
        '204':
          description: 'No protocols registered.'
    post:
      description: 'Register a new protocol based on an active DBus interface'
      parameters:
        -
          name: protocol
          in: body
          schema:
            $ref: '#/definitions/ProtocolOverview'
      responses:
        '200':
          description: 'Protocol has been added'
          schema:
            $ref: '#/definitions/ProtocolOverview'
        '400':
          description: 'An error occured processing the request'
  '/protocols/{protocolId}/discovery':
    post:
      description: 'Start a device discovery on all available protocols'
      responses:
        '204':
          description: "The discovery has been successfully started on all the regitered\nprotocols; asynchronous updates will be sent via websocket\n"
        '409':
          description: "Indicates that discovery has been requested to the underlying\nprotocols but one or more reported a failure\n"
    delete:
      description: 'Stop a device discovery previously initiated'
      responses:
        '204':
          description: "The discovery has been successfully stopped on all the regitered\nprotocols; There will be no further device updates via websocket\n"
        '409':
          description: "Indicates that discovery has been requested to stop on the underlying\nprotocols but one or more reported a failure\n"
  '/protocols/{protocolId}':
    parameters:
      -
        name: protocolId
        in: path
        description: 'Agile protocol Id'
        required: true
        type: string
    put:
      description: 'Update protocol information'
      responses:
        '202':
          description: 'Protocol has been added'
        '400':
          description: 'An error occured processing the request'
        '404':
          description: 'Protocol not found'
    delete:
      description: 'Unregister a protocol'
      responses:
        '200':
          description: 'Protocol unregistered'
        '404':
          description: 'Protocol not found'
  
definitions:
  DeviceStreamChannel:
    description: 'A channel contains a single measurement value of a sensor'
    type: object
    properties:
      name:
        type: object
      type:
        type: object
  DeviceStream:
    description: 'A stream contains a set of measurement values for a sensor'
    type: object
    properties:
      name:
        type: object
      channels:
        type: array
        items:
          $ref: '#/definitions/DeviceStreamChannel'
  DeviceOverview:
    type: object
    properties:
      name:
        type: object
      id:
        type: object
      status:
        enum:
          - CONNECTED
          - DISCONNECTED
  
